{"version":3,"sources":["components/Routes.js","App.js","index.js"],"names":["LoggedInRoutes","exact","path","component","from","to","LoggedOutRoutes","AppRouter","isLoggedIn","Wrapper","styled","div","props","theme","maxWidth","App","useState","Routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yNAGMA,EAAiB,kBACrB,cAD8C,CAC7C,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW,OADnC,UAEE,cAAC,IAAD,CAAOD,KAAK,QAAQC,UAAW,OAFjC,YAGE,cAAC,IAAD,CAAOD,KAAK,cAAcC,UAAW,OAHvC,MAIE,cAAC,IAAD,CAAOD,KAAK,WAAWC,UAAW,OAJpC,SAKE,cAAC,IAAD,CAAOD,KAAK,OAAOC,UAAW,OALhC,aAME,cAAC,IAAD,CAAOD,KAAK,WAAWC,UAAW,OANpC,SAOE,cAAC,IAAD,CAAOD,KAAK,WAAWC,UAAW,OAPpC,SAQE,cAAC,IAAD,CAAOD,KAAK,eAAeC,UAAW,OARxC,KASE,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,UAAW,OAT3C,IAUE,cAAC,IAAD,CAAOD,KAAK,gBAAgBC,UAAW,OAVzC,IAWE,cAAC,IAAD,CAAOD,KAAK,SAASC,UAAW,OAXlC,WAYE,cAAC,IAAD,CAAOD,KAAK,SAASC,UAAW,OAZlC,WAaE,cAAC,IAAD,CAAUC,KAAK,IAAIC,GAAG,MAbxB,uBAiBIC,EAAkB,kBACtB,cAD8C,CAC7C,IAAD,WACE,cAAC,IAAD,CAAOL,OAAK,EAACC,KAAK,IAAIC,UAAW,OADnC,UAEE,cAAC,IAAD,CAAOD,KAAK,UAAUC,UAAW,OAFnC,UAGE,cAAC,IAAD,CAAOD,KAAK,SAASC,UAAW,OAHlC,WAIE,cAAC,IAAD,CAAOD,KAAK,kBAAkBC,UAAW,OAJ3C,IAKE,cAAC,IAAD,CAAUC,KAAK,IAAIC,GAAG,MALxB,uBAYaE,EAHG,SAAC,GAAD,SAAGC,WACN,cAAC,EAAD,IAAqB,cAAC,EAAD,KC3B9BC,EAAUC,IAAOC,IAAV,kFAEE,SAAAC,GAAK,OAAIA,EAAMC,MAAMC,YAoBrBC,MAhBf,WAAgB,IAAD,EACuBC,oBAAS,GADhC,mBACNR,EADM,KAGb,OAHa,KAIX,cAAC,IAAD,UACE,qCACGA,GAAc,KADjB,IAEE,cAACC,EAAD,UACE,cAACQ,EAAD,CAAQT,WAAYA,YChB9BU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.01a8bac3.chunk.js","sourcesContent":["import React from \"react\";\nimport { Redirect, Route, Switch } from \"react-router-dom\";\n\nconst LoggedInRoutes = () => (                  //로그인 이후 접근 가능\n  <Switch>\n    <Route exact path=\"/\" component={null} />       { /* 메인화면 */  }\n    <Route path=\"/rank\" component={null} />         { /* 랭킹 */ }\n    <Route path=\"/notice/:id\" component={null} />   { /* 공지사항 아이디 Detail */ }\n    <Route path=\"/profile\" component={null} />      { /* 유저 페이지 */ }\n    <Route path=\"/ctf\" component={null} />          { /*ctf 문제리스트 페이지 */ }\n    <Route path=\"/ctf/:id\" component={null} />      { /*ctf 문제 Detail페이지 */ }\n    <Route path=\"/wargame\" component={null} />      { /*wargame 페이지 */ }\n    <Route path=\"/wargame/:id\" component={null} />  { /*wargame 문제사이트 */ }\n    <Route path=\"/administration\" component={null} /> { /*admin 페이지 */ }\n    <Route path=\"/notification\" component={null} /> { /*공지, 이벤트 작성 페이지 */ }\n    <Route path=\"/quest\" component={null} />        { /*문제 관리 리스트 */ }\n    <Route path=\"/users\" component={null} />        { /*회원 관리 리스트 */ }\n    <Redirect from=\"*\" to=\"/\" />                { /*리다이렉션 */ }\n  </Switch>\n);\n\nconst LoggedOutRoutes = () => (                 //로그인 이전 접근 경로\n  <Switch>\n    <Route exact path=\"/\" component={null} />       { /*로그인 이전 메인화면 */ }\n    <Route path=\"/signup\" component={null} />       { /*회원가입 페이지 */ }\n    <Route path=\"/login\" component={null} />        { /*로그인 페이지 */ }\n    <Route path=\"/administration\" component={null} /> { /*admin 로그인 페이지 */ }\n    <Redirect from=\"*\" to=\"/\" />                { /*다른 경로로 접근시 리다이렉션 경로 */ }\n  </Switch>\n);\n\nconst AppRouter = ({ isLoggedIn }) => \n  isLoggedIn ? <LoggedInRoutes /> : <LoggedOutRoutes />;\n\nexport default AppRouter;","import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport { HashRouter as Router } from 'react-router-dom';\nimport Routes from './components/Routes';\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  max-width: ${props => props.theme.maxWidth};\n  width: 100%;\n`;\n\nfunction App() {\n  const [isLoggedIn, useIsLoggedIn] = useState(false);\n\n  return (\n    <Router>\n      <>\n        {isLoggedIn && null} { /* 헤더 들어갈 자리 */ }\n        <Wrapper>\n          <Routes isLoggedIn={isLoggedIn} />\n          { /* Footer 들어갈 자리 */}\n        </Wrapper>\n      </>\n    </Router>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}